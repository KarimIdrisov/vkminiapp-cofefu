{"version":3,"sources":["panels/Home.js","static/locations.js","panels/Locations.js","App.js","index.js"],"names":["Home","id","go","stretched","size","mode","onClick","LOCATIONS","university","hospital","embassy","movieStudio","partisanDetachment","vegetableMarket","pirateShip","polarStation","supermarket","theatre","passengerTrain","Locations","className","before","Object","keys","map","loc","expandable","App","useState","scheme","setScheme","activePanel","setActivePanel","useEffect","bridge","subscribe","detail","type","data","e","currentTarget","dataset","to","send","ReactDOM","render","document","getElementById"],"mappings":"4NA4BeA,EAvBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,OACZ,eAAC,IAAD,CAAOD,GAAIA,EAAX,UACC,cAAC,IAAD,kBACA,eAAC,IAAD,WACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAQE,WAAS,EAACC,KAAK,IAAIC,KAAK,YAAYC,QAASJ,EAAI,UAAQ,YAAjE,uHAID,cAAC,IAAD,UACC,cAAC,IAAD,CAAQC,WAAS,EAACC,KAAK,IAAIC,KAAK,YAAYC,QAASJ,EAAI,UAAQ,OAAjE,oFCfSK,EAAY,CACrBC,WAAY,qEACZC,SAAU,mDACVC,QAAS,+DACTC,YAAa,+DACbC,mBAAoB,gHACpBC,gBAAiB,yDACjBC,WAAY,0GACZC,aAAc,8FACdC,YAAa,qEACbC,QAAS,iCACTC,eAAgB,iHCqBLC,EA1BG,SAAC,GAAD,IAAGlB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,OACd,eAAC,IAAD,CAAOD,GAAIA,EAAX,UACI,cAAC,IAAD,CAAamB,UAAU,eAAvB,SACI,cAAC,IAAD,CAAMC,OAAQ,cAAC,IAAD,CAAiBf,QAASJ,EAAI,UAAQ,SAApD,0DAIJ,cAAC,IAAD,UACI,cAAC,IAAD,UACKK,GAAae,OAAOC,KAAKhB,GAAWiB,KAAI,SAAAC,GACrC,OACI,cAAC,IAAD,CAAMC,YAAU,EAAhB,SACKnB,EAAUkB,IADOA,cC0B/BE,EAlCH,WACX,MAA4BC,mBAAS,gBAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,QAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACTC,IAAOC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACtB,yBAATD,GACHP,EAAUQ,EAAKT,aAGf,IAEH,IAAM3B,EAAK,SAAAqC,GACVP,EAAeO,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBb,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAME,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAW9B,GAAG,YAAYC,GAAIA,IAC9B,cAAC,EAAD,CAAMD,GAAG,OAAQC,GAAIA,kBC3B7BgC,IAAOS,KAAK,gBAEZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe69cfa3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Spy</PanelHeader>\n\t\t<Group>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"locations\">\n\t\t\t\t\tПосмотреть локации\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"game\">\n\t\t\t\t\tНачать игру\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","export const LOCATIONS = {\r\n    university: \"Университет\",\r\n    hospital: \"Больница\",\r\n    embassy: \"Посольство\",\r\n    movieStudio: \"Киностудия\",    \r\n    partisanDetachment: \"Партизанский отряд\",\r\n    vegetableMarket: \"Овощебаза\",\r\n    pirateShip: \"Пиратский корабль\",\r\n    polarStation: \"Полярная станция\",\r\n    supermarket: \"Супермаркет\",\r\n    theatre: \"Театр\",\r\n    passengerTrain: \"Пассажирский поезд\",\r\n}\r\n\r\nexport const STATUS = {\r\n    university: {\r\n        student: \"Студент\",\r\n        watchman: \"Вахтёр\",\r\n        rector: \"Ректор\",\r\n        professor: \"Профессор\",\r\n        graduateStudent: \"Аспирант\",\r\n    },\r\n    hospital: {\r\n        therapist: \"Терапевт\",\r\n        surgeon: \"Хирург\",\r\n        nurse: \"Медсестра\",\r\n        patient: \"Пациент\",\r\n    },\r\n    embassy: {\r\n        ambassador: 'Посол',\r\n        bodyguard: 'Телохранитель',\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, PanelHeaderBack, List } from '@vkontakte/vkui';\r\nimport { LOCATIONS } from '../static';\r\n\r\nconst Locations = ({ id, go }) => (\r\n    <Panel id={id}>\r\n        <PanelHeader className='start-header'>\r\n            <Cell before={<PanelHeaderBack onClick={go} data-to='home' />}>\r\n                Локации\r\n            </Cell>\r\n        </PanelHeader>\r\n        <Group>\r\n            <List>\r\n                {LOCATIONS && Object.keys(LOCATIONS).map(loc => {\r\n                    return (\r\n                        <Cell expandable key={loc}>\r\n                            {LOCATIONS[loc]}\r\n                        </Cell>\r\n                    )\r\n                })}\r\n            </List>\r\n        </Group>\r\n    </Panel>\r\n);\r\n\r\nLocations.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Locations;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './static/global.css'\n\nimport Home from './panels/Home';\nimport Locations from './panels/Locations';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Locations id='locations' go={go} />\n\t\t\t\t\t\t\t\t<Home id='home'  go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}